1)Qué es Github?
Es una plataforma que permite crear repositorios de código colaborativo. Esto quiere decir que se puede guardar un fichero con código fuente al que otras personas puedan acceder. Además, lleva un control de registro de los cambios realizados al código.

2) Cuando se utiliza Git, dentro del sistema de versiones se puede acceder al historial de modificaciones como si de un árbol se tratase. De esta forma se puede ir abriendo ramas que parten de la rama principal (master) o de otra rama (Branch).
Uno de los usos más comunes, es el de desarrollar nuevas funcionalidades dentro de un Branch, en lugar de hacerlo directamente en el master. La principal ventaja que tiene esto es mantener el master “limpio”.

3) Qué es un commit?
Con el comando commit podemos guardar nuestros cambios en un repertorio en la nube.

4) Qué se entiende cuando se dice que un archivo está “staged”?
Stage es hacer “git add file.ext ” a un archivo específico, o “git add.” para todos los archivos modificados y sin seguimiento. Los archivos que se han agregado de esta manera se dice que están “staged” y se incluirán en el próximo “commit”.

5) Qué hace el comando git checkout?
El comando “git checkout” permite navegar entre las branches creadas por “git branch” , verificando una branch actualiza los archivos en el directorio de trabajo para que coincidan con la versión almacenada en esa branch, y le dice a Git que registre todas las confirmaciones nuevas en esa branch.

6) Qué hace el comando git stash?
Generalmente se utiliza cuando se desea registrar el estado actual del directorio de trabajo, pero se desea volver a un directorio de trabajo limpio. Este comando guarda las modificaciones locales en temporal y vuelve el directorio de trabajo a un estado inicial (como si no se hubiese hecho ningún cambio en la rama).

7) Qué hace el comando git add?
Con este comando se agregan archivos al index. Por ejemplo en el caso de querer agregar un archivo desde el temp, se llama al mismo con el comando “git add temp.txt”.

8) Qué es Pytest?
El recuadro de pytest es un comando útil para generar pequeños códigos y someterlos a una revisión que reporta los errores en dicho código. Además es posible usar este comando en varias versiones de código Python como Python 2.7 o Python 3.4+.Por otro lado esta instrucción puede dar información detallada de errores tipo “assert” (ver mayor detalle en la siguiente pregunta).

9) Bajo el contexto de pytest. Qué es un “assert”?
Un assert es una prueba enfocada a la lógica algorítmica de un código. Para ello se requiere realizar un comando de manera correcta a nivel de sintaxis, con esto se procede a verificar exclusivamente la lógica de una función. Si esta es incorrecta, por cualquiera que sea su naturaleza se obtendrá un error de tipo “AssertionError”. Una manera fácil de probar este comando es generando una división entre 0 para obtener un error tipo assert al evaluar la división con cualquier número natural.

10) Qué es Flake 8?
Es una biblioteca de Python que anexa aplicaciones como PyFlakes, pycodestyle entre otros scripts. Su gran utilidad radica en que es una herramienta para encontrar errores de programación (errores tipo PEP8). Otra gran ventaja de Flake 8 es su capacidad de determinar la complejidad ciclomática de un código. Esto es la cantidad de líneas de flujo independientes que tiene un código, la cual en exceso puede representar una carga innecesaria a la hora de compilar y así generar un código no óptimo.
